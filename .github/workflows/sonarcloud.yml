name: SonarCloud analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: read

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          # Si ya estÃ¡n en requirements.txt no pasa nada por reinstalarlos
          pip install -r requirements.txt || true
          pip install pytest coverage pytest-cov

      # Forzamos rutas RELATIVAS en coverage y marcamos src como origen
      - name: Write .coveragerc (relative paths)
        run: |
          cat > .coveragerc << 'EOF'
          [run]
          branch = True
          source = src
          relative_files = True

          [report]
          omit =
              tests/*
          EOF

      - name: Run tests and generate coverage.xml
        env:
          PYTHONPATH: .
        run: |
          # Ejecuta tests midiendo cobertura (sobre src) y luego genera XML con rutas relativas
          python -m pytest -q --maxfail=1 --disable-warnings \
            --cov=src --cov-branch --cov-report=term-missing
          coverage xml -o coverage.xml
          echo "== ls =="
          ls -lah
          echo "== head coverage.xml =="
          sed -n '1,40p' coverage.xml || true

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
